<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">
	<channel>
		<title>PoshCode</title>
		<link>http://PoshCode.org/video/</link>
		<description>Community resources for PowerShell coders</description>
		<language>en</language>
		<lastbuilddate>Fri, 10 Aug 2018 03:35:39 GMT</lastbuilddate>
		<generator>http://HuddledMasses.org/PowerSite</generator>
		<docs>http://blogs.law.harvard.edu/tech/rss</docs>
			<item>
				<title>Building cmdlets for a REST API with PowerShell classes, Azure-based ...  by Jeremy Murrah</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/devops-global-summit-2018-2018-05-02-building-cmdlets-for-a-rest-api-with-powershell-classes-azure-based-by-jeremy-murrah/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=RgwrHpE0IK4"><img src="https://i3.ytimg.com/vi/RgwrHpE0IK4/hqdefault.jpg" alt="Building cmdlets for a REST API with PowerShell classes, Azure-based ...  by Jeremy Murrah" title="Building cmdlets for a REST API with PowerShell classes, Azure-based ...  by Jeremy Murrah" /></a></p>
<p>Building cmdlets for a REST API with PowerShell classes, Azure-based integration tests and continuous deployment  by Jeremy Murrah</p>
<p>This talk will cover a project to write a set of cmdlets for an Infoblox dns appliance.  Code is split between cmdlets for the interface and parameter validation, and classes for modeling all the REST calls.  Will also cover the CD pipeline via appveyor with tests against an Azure appliance.
Classes, the new feature in PowerShell 5.0, was added just for writing DSC resources right?  Not so!  Come see how classes can be used as part of a PowerShell cmdlet, providing code separation, easier parameter validation, and more.  This session will cover a working module that uses class definitions alongside standard PowerShell cmdlets to integrate with a REST API.  Learn how using defined classes makes integration between get and set cmdlets easier and potentially safer. It will also cover the release pipeline for testing and deployment, with a little Azure Resource Manager template design thrown in for fun.  All code for this session will be available on GitHub.
This session will cover:
- How to build a REST Uri and payload from user-provided parameter values
- How to model objects and build class definitions and methods to reflect actions on those objects
- How to build cmdlets that interface with both the user and the class definitions, isolating code for improved readability
- How to build a test environment in Azure for running Pester tests and deploy to the PS Gallery with Appveyor
This has been an amazing side project that I've been working on for over a year.  I've learned a ton about classes, github, appveyor, azure, etc. and I'm eager to share all that. Current project code can be found here:  github.com/murrahjm/Infoblox-Classy</p>]]></description>
			</item>
			<item>
				<title>Developing with PowerShell Classes: Here be Dragons by Brandon Olin</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/devops-global-summit-2018-2018-05-02-developing-with-powershell-classes-here-be-dragons-by-brandon-olin/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=i1DpPU_xxBc"><img src="https://i2.ytimg.com/vi/i1DpPU_xxBc/hqdefault.jpg" alt="Developing with PowerShell Classes: Here be Dragons by Brandon Olin" title="Developing with PowerShell Classes: Here be Dragons by Brandon Olin" /></a></p>
<p>Classes are a powerful capability in PowerShell and are meant to provide a more familiar developing experience to more traditional programmers. You will not experience calm skies and quiet seas though. This talk will show you where the dragons lurk and help you navigate the stormy seas.
Classes were introduced in PowerShell 5 and mainly to aid in writing DSC resources but can be used with non-DSC modules as well. This talk will go over some of the hidden gotchas when developing with classes including:</p>
<ul>
<li><p>Importing issues</p>
</li>
<li><p>Verbose / Debug oddities</p>
</li>
<li><p>Sharing classes between modules</p>
<p>I've developed and released a large PowerShell project (PoshBot) that primarily consists of PowerShell classes. While I could have written the module using traditional functions and cmdlets, I wanted an excuse to try classes out on a new project. Using classes was not a smooth experience and I want to share some of my challenges.</p>
</li>
</ul>]]></description>
			</item>
			<item>
				<title>Team Leadership Session by Michael Greene &amp; Joey Aiello</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/devops-global-summit-2018-2018-05-02-team-leadership-session-by-michael-greene-joey-aiello/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=wwBMgP021sk"><img src="https://i4.ytimg.com/vi/wwBMgP021sk/hqdefault.jpg" alt="Team Leadership Session by Michael Greene &amp; Joey Aiello" title="Team Leadership Session by Michael Greene &amp; Joey Aiello" /></a></p>
<p>Team Leadership Session</p>]]></description>
			</item>
			<item>
				<title>A Historical Architectural Tour of PowerShell by Bruce Payette</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/devops-global-summit-2018-2018-05-02-a-historical-architectural-tour-of-powershell-by-bruce-payette/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=yWwcEsNnzBM"><img src="https://i2.ytimg.com/vi/yWwcEsNnzBM/hqdefault.jpg" alt="A Historical Architectural Tour of PowerShell by Bruce Payette" title="A Historical Architectural Tour of PowerShell by Bruce Payette" /></a></p>
<p>Join one of original PowerShell team members for a look at how PowerShell has evolved over time. We'll look at both the technical and environmental drivers behind many of the decisions that made PowerShell what it is today.</p>]]></description>
			</item>
			<item>
				<title>Keynote: State of the Community by Don Jones</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/devops-global-summit-2018-2018-05-02-keynote-state-of-the-community-by-don-jones/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=sN7xw_jq_64"><img src="https://i4.ytimg.com/vi/sN7xw_jq_64/hqdefault.jpg" alt="Keynote: State of the Community by Don Jones" title="Keynote: State of the Community by Don Jones" /></a></p>
<p>Find out what's been happening in the PowerShell community, and get &quot;pumped up&quot; for a week at Summit! PowerShell.org CEO Don Jones covers what's new, what's been happening, and offers sage advice for getting the most from your Summit experience.</p>]]></description>
			</item>
			<item>
				<title>PowerShell Team: Managing Server State using Configuration as Code by Michael Greene</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/devops-global-summit-2018-2018-05-02-powershell-team-managing-server-state-using-configuration-as-code-by-michael-greene/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=k4jzskfrYXw"><img src="https://i4.ytimg.com/vi/k4jzskfrYXw/hqdefault.jpg" alt="PowerShell Team: Managing Server State using Configuration as Code by Michael Greene" title="PowerShell Team: Managing Server State using Configuration as Code by Michael Greene" /></a></p>
<p>PowerShell Team: Managing Server State using Configuration as Code</p>]]></description>
			</item>
			<item>
				<title>Connecting the Dots with PowerShell by Warren Frame</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/devops-global-summit-2018-2018-05-02-connecting-the-dots-with-powershell-by-warren-frame/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=5SVRCkUtKJU"><img src="https://i2.ytimg.com/vi/5SVRCkUtKJU/hqdefault.jpg" alt="Connecting the Dots with PowerShell by Warren Frame" title="Connecting the Dots with PowerShell by Warren Frame" /></a></p>
<p>One of PowerShell's greatest strengths is its ability to glue pretty much any technologies together. We'll use that strength to pull data from a number of services, connecting the resulting dots with a graph database that could be used as a lightweight CMDB.</p>
<p>We'll talk about:</p>
<ul>
<li><p>Different interfaces PowerShell can use, from modules to .NET libraries</p>
</li>
<li><p>Graph databases like Neo4j, and how these can be useful for sysadmins</p>
</li>
<li><p>A practical (janky) CMDB, and why these can be useful</p>
<h2>Why the topic:</h2>
</li>
</ul>
<p>I'm a fan of CMDBs that have useful data.  They can drive automation, monitoring and alerting, reporting, and anything else that benefits from visibility.</p>
<p>It just so happens that:</p>
<ul>
<li><p>This is a great way to illustrate the various ways to talk to things in PowerShell (modules, web APIs, .NET libraries, binaries, etc.)</p>
</li>
<li><p>Graph databases are awesome, and map to real life systems more easily than the cumbersome fun of primary keys, foreign keys, and strict schemas</p>
</li>
<li><p>Neo4j has a free, cross platform community edition, and there's a simple PowerShell module to work with it</p>
</li>
<li><p>We can instill other important lessons, e.g. modules/abstraction, community/sharing</p>
</li>
<li><p>We can provide a practical example that folks without a reasonable CMDB could borrow and extend</p>
</li>
<li><p>Heavy weight, expensive, actual CMDBs are a poor fit for shops adopting DevOps practices and principles</p>
</li>
</ul>]]></description>
			</item>
			<item>
				<title>PowerShell 2018: State of the Art by Jeffrey Snover</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/devops-global-summit-2018-2018-05-02-powershell-2018-state-of-the-art-by-jeffrey-snover/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=us4HTxtjfa8"><img src="https://i2.ytimg.com/vi/us4HTxtjfa8/hqdefault.jpg" alt="PowerShell 2018: State of the Art by Jeffrey Snover" title="PowerShell 2018: State of the Art by Jeffrey Snover" /></a></p>
<p>Join Microsoft Technical Fellow Jeffrey Snover for a look at PowerShell of 2018.</p>]]></description>
			</item>
			<item>
				<title>PowerShell Team: PowerShell Core by Joey Aiello</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/devops-global-summit-2018-2018-05-02-powershell-team-powershell-core-by-joey-aiello/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=4cSRSdsCbho"><img src="https://i1.ytimg.com/vi/4cSRSdsCbho/hqdefault.jpg" alt="PowerShell Team: PowerShell Core by Joey Aiello" title="PowerShell Team: PowerShell Core by Joey Aiello" /></a></p>
<p>PowerShell Team: PowerShell Core</p>]]></description>
			</item>
			<item>
				<title>Getting started with Just Enough Administration (JEA) by Jason Helmick</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/devops-global-summit-2018-2018-05-02-getting-started-with-just-enough-administration-jea-by-jason-helmick/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=zftC6eDzRJY"><img src="https://i3.ytimg.com/vi/zftC6eDzRJY/hqdefault.jpg" alt="Getting started with Just Enough Administration (JEA) by Jason Helmick" title="Getting started with Just Enough Administration (JEA) by Jason Helmick" /></a></p>
<p>In this fast paced “how-to” presentation, Let Jason Helmick take you the creation and implementation of JEA endpoints for secured administration and help you reduce the number of admins with excessive privilege. You will also learn how to gradually and safely implement JEA based on best practices.</p>]]></description>
			</item>
			<item>
				<title>Why you should embrace OpenSource. Jenkins-PowerShell-Containers  by Gabriel Rojas</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/devops-global-summit-2018-2018-05-02-why-you-should-embrace-opensource.-jenkins-powershell-containers-by-gabriel-rojas/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=hnXe1gxh3gU"><img src="https://i1.ytimg.com/vi/hnXe1gxh3gU/hqdefault.jpg" alt="Why you should embrace OpenSource. Jenkins-PowerShell-Containers  by Gabriel Rojas" title="Why you should embrace OpenSource. Jenkins-PowerShell-Containers  by Gabriel Rojas" /></a></p>
<p>Jenkins is a tool that have multiple uses but this talk will aim to show and explain how to build a pipeline in Jenkins to run a pester and script analyzer checks on a container</p>]]></description>
			</item>
			<item>
				<title>PowerShell Team: Inventory Your Server Environment and Detect Change at Scale by Jenny Hunter</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/devops-global-summit-2018-2018-05-02-powershell-team-inventory-your-server-environment-and-detect-change-at-scale-by-jenny-hunter/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=91A_Bsyzu-g"><img src="https://i2.ytimg.com/vi/91A_Bsyzu-g/hqdefault.jpg" alt="PowerShell Team: Inventory Your Server Environment and Detect Change at Scale by Jenny Hunter" title="PowerShell Team: Inventory Your Server Environment and Detect Change at Scale by Jenny Hunter" /></a></p>
<p>PowerShell Team: Inventory Your Server Environment and Detect Change at Scale</p>]]></description>
			</item>
			<item>
				<title>Become a PowerShell Debugging Ninja by Kirk Munro</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/devops-global-summit-2018-2018-05-02-become-a-powershell-debugging-ninja-by-kirk-munro/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=zhjU24hbYuI"><img src="https://i3.ytimg.com/vi/zhjU24hbYuI/hqdefault.jpg" alt="Become a PowerShell Debugging Ninja by Kirk Munro" title="Become a PowerShell Debugging Ninja by Kirk Munro" /></a></p>
<p>You've written PowerShell scripts or functions, and maybe packaged them up in a module. Then suddenly, when you least expect it, it shows up. It's red, and it's scary. You've hit a bug. But fear not! You, too, can become a PowerShell Debugging Ninja! Come to this session to learn how! Hi-yaaaaaaaah!
You will learn:</p>
<ol>
<li>&quot;Soft&quot; debugging skills that reduce or eliminate the need to work with a PowerShell debugger when it's not necessary.</li>
<li>&quot;Hard&quot; debugging skills that will help you get the most value for the least effort when working with the PowerShell debugger.</li>
<li>Best practices and tips and tricks that increase reliability and efficiency when writing and debugging PowerShell scripts and modules.</li>
</ol>]]></description>
			</item>
			<item>
				<title>Building PowerShell Applications that Operate on a Planetary Scale by Justin Sider</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/devops-global-summit-2018-2018-05-02-building-powershell-applications-that-operate-on-a-planetary-scale-by-justin-sider/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=1ZCKejo7H7U"><img src="https://i2.ytimg.com/vi/1ZCKejo7H7U/hqdefault.jpg" alt="Building PowerShell Applications that Operate on a Planetary Scale by Justin Sider" title="Building PowerShell Applications that Operate on a Planetary Scale by Justin Sider" /></a></p>
<p>Powershell is quickly taking over the IT world. With the new releases of PowerShell being platform agnostic you can now build Apps that can manage ANYTHING and run ANYWHERE! Combining PowerShell with open source web platforms allows you to build custom Apps to manage heterogeneous infrastructures.
There is no ‘out of the box’ perfect solution available on the market today that can help you manage your infrastructure your way. It costs too much, it's too complex, there is no way to customize it... we can always find things wrong, or have a better way of doing things... it's human nature. So, I say put your money where your mouth is, and build one yourself! You know your requirements better than anyone else! And, if you know PowerShell you are in luck! Let's continue this journey together.
I have worked with many tools in the past, and they have never been quite right. I’ve always wanted more information, and extra button, remove some piece of data that I didn't care about, but the problem is that I didn’t understand the language it was written in, or didn’t have access to the source code. So I quit. I quit waiting for someone to do what I needed done, and I started building PowerShell applications to help manage my Information systems.<br />
The concept is simple, use powershell to collect data to be stored in a central location, a lightweight web application to display the data, and some business logic to apply relevant changes to the specific environments. The individual components break down into manageable pieces to include; A Queue Manager, Task Manager, Database, Web Application, and a Management service. A Task Manager can be deployed into any environment and is the workhorse of the application. It communicates with the database to input data and to get data to perform the specific workflows you have designed. All log files and related artifacts are securely stored on a CIFS share available for viewing in the User Interface.
With great success, comes more challenges! Having this great distributed system was great when starting, but quickly became a pain to manage! Manually updating scripts on VM’s halfway across the world is not fun, so I wrote a management service to keep all of my systems in sync. Runtime environments needed to be managed as well as source control on the executable files. Insert Docker to resolve the runtime environment, it’s a bit overkill, but does a fantastic job at creating an exact, repeatable workspace to execute scripts.
What other product will let you build and manage your complex environment of on premise, and cloud infrastructure across product lines like VMware, Active Directory, custom REST API’s, security scanning tools, and more?
In this talk I plan to break down all of the components that are used to construct a scaleable PowerShell application, as well as describe their roles. I will review some of the problems I have encountered as I have built my custom solution for my environment, as well as lead the audience to a path where they can get started. My hope is to have an engaging audience so we can discuss the importance of the CI/CD pipeline when managing this type of system, as well as the risks of introducing this level of automation into their environment.</p>]]></description>
			</item>
			<item>
				<title>The Build Release Pipeline Model for Mere Mortals  by Ryan Coates</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/devops-global-summit-2018-2018-05-02-the-build-release-pipeline-model-for-mere-mortals-by-ryan-coates/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=ccEO5buASv8"><img src="https://i4.ytimg.com/vi/ccEO5buASv8/hqdefault.jpg" alt="The Build Release Pipeline Model for Mere Mortals  by Ryan Coates" title="The Build Release Pipeline Model for Mere Mortals  by Ryan Coates" /></a></p>
<p>As automators, there are many benefits to be gained by utilizing a build/release pipeline outside of the dev team. Join me as I show you just a few of the possibilities these powerful tools provide us</p>]]></description>
			</item>
	</channel>
</rss>