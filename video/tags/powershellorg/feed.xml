<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">
	<channel>
		<title>PoshCode</title>
		<link>http://PoshCode.org/video/</link>
		<description>Community resources for PowerShell coders</description>
		<language>en</language>
		<lastbuilddate>Wed, 08 Aug 2018 20:42:01 GMT</lastbuilddate>
		<generator>http://HuddledMasses.org/PowerSite</generator>
		<docs>http://blogs.law.harvard.edu/tech/rss</docs>
			<item>
				<title>One MOF to rule them all, and in the Azure bind them by Jacob Morrison</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/powershellorg-2018-05-04-one-mof-to-rule-them-all-and-in-the-azure-bind-them-by-jacob-morrison/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=76YH2Lw98Oo"><img src="https://i4.ytimg.com/vi/76YH2Lw98Oo/hqdefault.jpg" alt="One MOF to rule them all, and in the Azure bind them by Jacob Morrison" title="One MOF to rule them all, and in the Azure bind them by Jacob Morrison" /></a></p>
<p>DSC is typically node specific. This talk explores a case example where both standard and custom DSC resources will be leveraged to break out of managing many MOF files or partial DSC configurations. One MOF in Azure can be used to dynamically configure all devices throughout your environment.</p>
<p>Desired State Configuration (DSC) is a powerful DevOps tool enabling you to provide a consistent, standardized configuration throughout your environment.  On its own DSC has a narrow focus on individual target nodes requiring you to author many Management Object Format (MOF) files, or get creative with partial DSC configurations.  This talk aims to strip back some of the mystery of DSC and explore a case example where we’ll leverage both standard and custom DSC resources to create one “smart” MOF capable of dynamically evaluating devices throughout your environment, and configuring them appropriately.  We’ll tie all of this into Azure Automation to show you how you can leverage its capability to rapidly create new devices and ensure their standardization moving forward.</p>]]></description>
			</item>
			<item>
				<title>Get control of you Git: Managing PS module binaries using VSTS CI/CD and... by Adam Murray</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/powershellorg-2018-05-04-get-control-of-you-git-managing-ps-module-binaries-using-vsts-cicd-and-by-adam-murray/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=HeG8HKQbXTA"><img src="https://i1.ytimg.com/vi/HeG8HKQbXTA/hqdefault.jpg" alt="Get control of you Git: Managing PS module binaries using VSTS CI/CD and... by Adam Murray" title="Get control of you Git: Managing PS module binaries using VSTS CI/CD and... by Adam Murray" /></a></p>
<p>When creating your PS modules, have you ever wondered what to do with the binary bits so they donâ€™t clog up your Git repo? In this demo, learn how to create a CI/CD build in VSTS by taking advantage of VSTS package management to store binaries outside Git and to act as your own private PS Gallery.</p>]]></description>
			</item>
			<item>
				<title>Building Cross Platform PowerShell Modules by Adam Driscoll</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/powershellorg-2018-05-04-building-cross-platform-powershell-modules-by-adam-driscoll/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=tqQqBH5RuVU"><img src="https://i1.ytimg.com/vi/tqQqBH5RuVU/hqdefault.jpg" alt="Building Cross Platform PowerShell Modules by Adam Driscoll" title="Building Cross Platform PowerShell Modules by Adam Driscoll" /></a></p>
<p>This session will be a deep dive into the steps necessary to develop, package and distribute a cross platform binary PowerShell module that runs on Windows PowerShell and PowerShell Core.</p>]]></description>
			</item>
			<item>
				<title>Creating PowerShell Projects and more with Plaster by Rob Pleau</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/powershellorg-2018-05-04-creating-powershell-projects-and-more-with-plaster-by-rob-pleau/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=3cjB9-84Xgw"><img src="https://i4.ytimg.com/vi/3cjB9-84Xgw/hqdefault.jpg" alt="Creating PowerShell Projects and more with Plaster by Rob Pleau" title="Creating PowerShell Projects and more with Plaster by Rob Pleau" /></a></p>
<p>Have you often sat staring off at all the other languages having fun scaffolding their projects with tools like Yeoman, dotnet CLI, or Visual Studio wishing you had something that cool in PowerShell? Wait no longer! With Plaster you can scaffold scripts, functions modules, anything!!!</p>]]></description>
			</item>
			<item>
				<title>Automate Problem Solving with PowerShell, Azure Automation, and OMS by Will Anderson</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/powershellorg-2018-05-04-automate-problem-solving-with-powershell-azure-automation-and-oms-by-will-anderson/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=Gd6vV3Qn9KA"><img src="https://i4.ytimg.com/vi/Gd6vV3Qn9KA/hqdefault.jpg" alt="Automate Problem Solving with PowerShell, Azure Automation, and OMS by Will Anderson" title="Automate Problem Solving with PowerShell, Azure Automation, and OMS by Will Anderson" /></a></p>
<p>Cloud and Datacenter Management MVP Will Anderson takes you through configuring Microsoft's Operations Management Suite alerts to trigger Azure Automation runbooks to remediate issues in your environment.</p>]]></description>
			</item>
			<item>
				<title>A Crash Course in Writing Your Own PSScriptAnalyzer Rules by Thomas Rayner</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/powershellorg-2018-05-04-a-crash-course-in-writing-your-own-psscriptanalyzer-rules-by-thomas-rayner/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=_T8wLsbTWJY"><img src="https://i4.ytimg.com/vi/_T8wLsbTWJY/hqdefault.jpg" alt="A Crash Course in Writing Your Own PSScriptAnalyzer Rules by Thomas Rayner" title="A Crash Course in Writing Your Own PSScriptAnalyzer Rules by Thomas Rayner" /></a></p>
<p>PSScriptAnalyzer is great. You use it to check all your code to make sure it follows PowerShell best practices, right? In this session, I'll show you how to take your PSScriptAnalyzer skills to the next level by showing you how to write your own custom rules, and make PSSA check your code for them.</p>]]></description>
			</item>
			<item>
				<title>Documentation as User Experience by Michael T Lombardi</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/powershellorg-2018-05-04-documentation-as-user-experience-by-michael-t-lombardi/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=0S0eAuGzjpI"><img src="https://i1.ytimg.com/vi/0S0eAuGzjpI/hqdefault.jpg" alt="Documentation as User Experience by Michael T Lombardi" title="Documentation as User Experience by Michael T Lombardi" /></a></p>
<p>Find out how you can (and should) treat your documentation as UX. Mike Lombardi will walk you through continuous integration and delivery of the three types (and many forms) of docs and show you tools and real-world examples while helping you improve the experience of people using your modules.</p>]]></description>
			</item>
			<item>
				<title>Finally! Create, Permission, and Publish an AD CS Certificate Template with ... by Ashley McGlone</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/powershellorg-2018-05-04-finally-create-permission-and-publish-an-ad-cs-certificate-template-with-by-ashley-mcglone/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=1qWF44Plbrk"><img src="https://i2.ytimg.com/vi/1qWF44Plbrk/hqdefault.jpg" alt="Finally! Create, Permission, and Publish an AD CS Certificate Template with ... by Ashley McGlone" title="Finally! Create, Permission, and Publish an AD CS Certificate Template with ... by Ashley McGlone" /></a></p>
<p>When creating a fully-automated Active Directory Certificate Services deployment many people hit the roadblock of creating a custom template, like the one for DSC credential encryption or the CMS cmdlets. Let's smash through that roadblock with PowerShell!</p>]]></description>
			</item>
			<item>
				<title>Writing Award Winning PowerShell Functions and Script Modules by Mike Robbins</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/powershellorg-2018-05-04-writing-award-winning-powershell-functions-and-script-modules-by-mike-robbins/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=d5x0Di52QZA"><img src="https://i1.ytimg.com/vi/d5x0Di52QZA/hqdefault.jpg" alt="Writing Award Winning PowerShell Functions and Script Modules by Mike Robbins" title="Writing Award Winning PowerShell Functions and Script Modules by Mike Robbins" /></a></p>
<p>Learn to write award winning advanced functions and script modules in PowerShell using the industry’s best practices from a former winner of the advanced category in the scripting games without having to sift through 10 years’ worth of outdated content on the Internet.
Transitioning from writing PowerShell one-liners and basic scripts to creating reusable PowerShell tools with advanced functions and script modules can be a daunting task and with all the different ways that you’ll find on the Internet to accomplish the same task, it can definitely seem overwhelming. During this session, we’ll demystify many of the intricacies of toolmaking while demonstrating the best practices for using parameters, parameter validation, cmdlet binding, supports should process, pipeline input, error handling, module manifests, and custom formatting.
Who better to learn how to write PowerShell functions and script modules from than a former winner of the advanced category in the scripting games and a multiyear recipient of both Microsoft’s MVP and SAPIEN Technologies MVP award. During this session, I’ll share my secrets for writing PowerShell advanced functions along with the lessons I’ve learned from the hundreds of tips and tricks that I receive via code reviews by the 600,000+ readers of my blog site each year.</p>]]></description>
			</item>
			<item>
				<title>PowerShell for SharePoint Online - How DevOps in making SharePoint Admins feel .. by Rick Taylor</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/powershellorg-2018-05-04-powershell-for-sharepoint-online-how-devops-in-making-sharepoint-admins-feel-by-rick-taylor/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=EHxVeRtvU0I"><img src="https://i2.ytimg.com/vi/EHxVeRtvU0I/hqdefault.jpg" alt="PowerShell for SharePoint Online - How DevOps in making SharePoint Admins feel .. by Rick Taylor" title="PowerShell for SharePoint Online - How DevOps in making SharePoint Admins feel .. by Rick Taylor" /></a></p>
<p>PowerShell for SharePoint Online - How DevOps in making SharePoint Admins feel loved again</p>
<p>This session helps SharePoint admins understand the &quot;Dev&quot; in DevOps &amp; understand the CD approach &amp; give them practical guidance they can implement immediately.</p>]]></description>
			</item>
			<item>
				<title>PowerShell Team: Orchestrating Tasks across Hybrid Environments using ... by Eamon O&#39;Reilly</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/powershellorg-2018-05-04-powershell-team-orchestrating-tasks-across-hybrid-environments-using-by-eamon-oreilly/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=BJXMgH7gfcc"><img src="https://i3.ytimg.com/vi/BJXMgH7gfcc/hqdefault.jpg" alt="PowerShell Team: Orchestrating Tasks across Hybrid Environments using ... by Eamon O'Reilly" title="PowerShell Team: Orchestrating Tasks across Hybrid Environments using ... by Eamon O'Reilly" /></a></p>
<p>Orchestrating Tasks across Hybrid Environments using PowerShell and Python</p>]]></description>
			</item>
			<item>
				<title>Securing your Environment with Just Enough Administration by James Petty</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/powershellorg-2018-05-04-securing-your-environment-with-just-enough-administration-by-james-petty/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=Zf6BJquD2NQ"><img src="https://i3.ytimg.com/vi/Zf6BJquD2NQ/hqdefault.jpg" alt="Securing your Environment with Just Enough Administration by James Petty" title="Securing your Environment with Just Enough Administration by James Petty" /></a></p>
<p>Giving everyone, local administrator or domain administrator privileges is a really bad idea. Even the best of admins makes mistakes which can have unexpected consequences. With JEA we can truly follow the model of least privilege access giving admins the rights they need to do their job.
No matter how big or small your environment is, giving every administrator unnecessary elevated privileges can result in data loss, or theft due to mistakes or rogue administration. Now with Just Enough Administration (JEA) we can truly follow the model of least privilege access and give admins, helpdesk technicians, developers (the list goes on) the rights they need to do their job, without bugging you, but still maintaining security best practices.
We will not only go over how to configure JEA but will also show you how to properly configure and deploy it to an already existing infrastructure (without using DSC) but using remote PowerShell commands and GPO’s
Speakers</p>]]></description>
			</item>
			<item>
				<title>What&#39;s Cooking with PowerShell Core? by Maximo Trinidad</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/powershellorg-2018-05-04-whats-cooking-with-powershell-core-by-maximo-trinidad/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=838T2kTFbyQ"><img src="https://i1.ytimg.com/vi/838T2kTFbyQ/hqdefault.jpg" alt="What's Cooking with PowerShell Core? by Maximo Trinidad" title="What's Cooking with PowerShell Core? by Maximo Trinidad" /></a></p>
<p>This will be a tour like session showing PowerShell Core in both Windows and Linux. Also, at the same time working with Windows 10 Bash bring examples of PowerShell Core cross-platform.</p>]]></description>
			</item>
			<item>
				<title>Pesterize Your Code!! by James Arruda</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/powershellorg-2018-05-04-pesterize-your-code-by-james-arruda/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=WIX0wUZaL0c"><img src="https://i4.ytimg.com/vi/WIX0wUZaL0c/hqdefault.jpg" alt="Pesterize Your Code!! by James Arruda" title="Pesterize Your Code!! by James Arruda" /></a></p>
<p>In this session you will learn about the basics of Pester, and most importantly how to get started. My personal experience on how I got started will be discussed as well as my demonstrations of how to write tests as I progress through simple examples to more &quot;real life&quot; Pester tests.</p>]]></description>
			</item>
			<item>
				<title>OS Deployments useing WinPE + PowerShell and WindowsImageTools by David Jones</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/powershellorg-2018-05-04-os-deployments-useing-winpe-powershell-and-windowsimagetools-by-david-jones/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=Rrk2j0QNKt0"><img src="https://i3.ytimg.com/vi/Rrk2j0QNKt0/hqdefault.jpg" alt="OS Deployments useing WinPE + PowerShell and WindowsImageTools by David Jones" title="OS Deployments useing WinPE + PowerShell and WindowsImageTools by David Jones" /></a></p>
<p>When you don't have expensive deployment tools PowerShell can be used as a down and dirty way to automating OS deployments. We will explore creating a PowerShell enabled WinPE image and the ins and outs of the WindowsImageTools module</p>]]></description>
			</item>
	</channel>
</rss>