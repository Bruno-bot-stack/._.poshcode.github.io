<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">
	<channel>
		<title>PoshCode</title>
		<link>http://PoshCode.org/video/</link>
		<description>Community resources for PowerShell coders</description>
		<language>en</language>
		<lastbuilddate>Wed, 08 Aug 2018 07:51:07 GMT</lastbuilddate>
		<generator>http://HuddledMasses.org/PowerSite</generator>
		<docs>http://blogs.law.harvard.edu/tech/rss</docs>
			<item>
				<title>Get control of you Git: Managing PS module binaries using VSTS CI/CD and... by Adam Murray</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/powershellorg-2018-05-04-get-control-of-you-git-managing-ps-module-binaries-using-vsts-cicd-and-by-adam-murray/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=HeG8HKQbXTA"><img src="https://i1.ytimg.com/vi/HeG8HKQbXTA/hqdefault.jpg" alt="Get control of you Git: Managing PS module binaries using VSTS CI/CD and... by Adam Murray" title="Get control of you Git: Managing PS module binaries using VSTS CI/CD and... by Adam Murray" /></a></p>
<p>When creating your PS modules, have you ever wondered what to do with the binary bits so they donâ€™t clog up your Git repo? In this demo, learn how to create a CI/CD build in VSTS by taking advantage of VSTS package management to store binaries outside Git and to act as your own private PS Gallery.</p>]]></description>
			</item>
			<item>
				<title>One MOF to rule them all, and in the Azure bind them by Jacob Morrison</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/powershellorg-2018-05-04-one-mof-to-rule-them-all-and-in-the-azure-bind-them-by-jacob-morrison/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=76YH2Lw98Oo"><img src="https://i4.ytimg.com/vi/76YH2Lw98Oo/hqdefault.jpg" alt="One MOF to rule them all, and in the Azure bind them by Jacob Morrison" title="One MOF to rule them all, and in the Azure bind them by Jacob Morrison" /></a></p>
<p>DSC is typically node specific. This talk explores a case example where both standard and custom DSC resources will be leveraged to break out of managing many MOF files or partial DSC configurations. One MOF in Azure can be used to dynamically configure all devices throughout your environment.</p>
<p>Desired State Configuration (DSC) is a powerful DevOps tool enabling you to provide a consistent, standardized configuration throughout your environment.  On its own DSC has a narrow focus on individual target nodes requiring you to author many Management Object Format (MOF) files, or get creative with partial DSC configurations.  This talk aims to strip back some of the mystery of DSC and explore a case example where we’ll leverage both standard and custom DSC resources to create one “smart” MOF capable of dynamically evaluating devices throughout your environment, and configuring them appropriately.  We’ll tie all of this into Azure Automation to show you how you can leverage its capability to rapidly create new devices and ensure their standardization moving forward.</p>]]></description>
			</item>
			<item>
				<title>Automate Problem Solving with PowerShell, Azure Automation, and OMS by Will Anderson</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/powershellorg-2018-05-04-automate-problem-solving-with-powershell-azure-automation-and-oms-by-will-anderson/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=Gd6vV3Qn9KA"><img src="https://i4.ytimg.com/vi/Gd6vV3Qn9KA/hqdefault.jpg" alt="Automate Problem Solving with PowerShell, Azure Automation, and OMS by Will Anderson" title="Automate Problem Solving with PowerShell, Azure Automation, and OMS by Will Anderson" /></a></p>
<p>Cloud and Datacenter Management MVP Will Anderson takes you through configuring Microsoft's Operations Management Suite alerts to trigger Azure Automation runbooks to remediate issues in your environment.</p>]]></description>
			</item>
			<item>
				<title>A Crash Course in Writing Your Own PSScriptAnalyzer Rules by Thomas Rayner</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/powershellorg-2018-05-04-a-crash-course-in-writing-your-own-psscriptanalyzer-rules-by-thomas-rayner/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=_T8wLsbTWJY"><img src="https://i4.ytimg.com/vi/_T8wLsbTWJY/hqdefault.jpg" alt="A Crash Course in Writing Your Own PSScriptAnalyzer Rules by Thomas Rayner" title="A Crash Course in Writing Your Own PSScriptAnalyzer Rules by Thomas Rayner" /></a></p>
<p>PSScriptAnalyzer is great. You use it to check all your code to make sure it follows PowerShell best practices, right? In this session, I'll show you how to take your PSScriptAnalyzer skills to the next level by showing you how to write your own custom rules, and make PSSA check your code for them.</p>]]></description>
			</item>
			<item>
				<title>Pesterize Your Code!! by James Arruda</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">http://PoshCode.org/video/powershellorg-2018-05-04-pesterize-your-code-by-james-arruda/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=WIX0wUZaL0c"><img src="https://i4.ytimg.com/vi/WIX0wUZaL0c/hqdefault.jpg" alt="Pesterize Your Code!! by James Arruda" title="Pesterize Your Code!! by James Arruda" /></a></p>
<p>In this session you will learn about the basics of Pester, and most importantly how to get started. My personal experience on how I got started will be discussed as well as my demonstrations of how to write tests as I progress through simple examples to more &quot;real life&quot; Pester tests.</p>]]></description>
			</item>
	</channel>
</rss>