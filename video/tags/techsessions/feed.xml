<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">
	<channel>
		<title>PoshCode</title>
		<link>https://PoshCode.org/video/</link>
		<description>Community resources for PowerShell coders</description>
		<language>en</language>
		<lastbuilddate>Fri, 10 Aug 2018 03:35:46 GMT</lastbuilddate>
		<generator>https://HuddledMasses.org/PowerSite</generator>
		<docs>http://blogs.law.harvard.edu/tech/rss</docs>
			<item>
				<title>TechSession: Understanding What You’re Typing in Windows PowerShell</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">https://PoshCode.org/video/powershellorg-techsessions-2016-04-13-techsession-understanding-what-youre-typing-in-windows-powershell/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=OwH1oqUb-No"><img src="https://i4.ytimg.com/vi/OwH1oqUb-No/hqdefault.jpg" alt="TechSession: Understanding What You’re Typing in Windows PowerShell" title="TechSession: Understanding What You’re Typing in Windows PowerShell" /></a></p>
<p>Join Tim Warner where he examines stuff like aliases, positional parameters, and the pipeline, and actually learn how it all works under the hood instead simply typing and praying.</p>]]></description>
			</item>
			<item>
				<title>The Top 10 Considerations When Writing PowerShell Advanced Functions</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">https://PoshCode.org/video/powershellorg-techsessions-2015-09-09-the-top-10-considerations-when-writing-powershell-advanced-functions/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=tcAz4T1Aydo"><img src="https://i1.ytimg.com/vi/tcAz4T1Aydo/hqdefault.jpg" alt="The Top 10 Considerations When Writing PowerShell Advanced Functions" title="The Top 10 Considerations When Writing PowerShell Advanced Functions" /></a></p>
<p>There are lots of things to consider when writing an advanced function in PowerShell depending on what the function will be designed to accomplish, what operating system and PowerShell versions it will be written for, and who will be using it. During this session, PowerShell MVP Mike F Robbins will walk you through the top 10 items that he takes into consideration along with his thought process when creating advanced functions in PowerShell. We’ll briefly discuss comment based help, parameters, parameter validation, pipeline input, and error handling. This will NOT be a deep dive into any one of these topics as the focus of this session will be on writing advanced functions to maximize code reusability by minimizing static values. Prior experience with PowerShell is recommended</p>]]></description>
			</item>
			<item>
				<title>Discovering TeamCity and Build PowerShell org</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">https://PoshCode.org/video/powershellorg-techsessions-2015-08-13-discovering-teamcity-and-build-powershell-org/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=eUBphSlZqMo"><img src="https://i2.ytimg.com/vi/eUBphSlZqMo/hqdefault.jpg" alt="Discovering TeamCity and Build PowerShell org" title="Discovering TeamCity and Build PowerShell org" /></a></p>
<p>Introduction to using TeamCity for continuous integration, with particular focus on how we’ve set up build.powershell.org for testing of PowerShell modules:</p>
<pre><code>Basics of TeamCity.  (How to set up a project.  Deeper understanding

of how our templates and agents work.  How to expand on what’s already

there once your project is created from the template.)
GitHub integration.  (Build status icons automatically shown on GitHub branches and pull requests.)
REST API basics.  (Build status icons on arbitrary websites or in README.md files, etc.)
A look at how the Pester project uses TeamCity to automatically publish its releases to PowerShellGet, Chocolatey and nuget.org.
Whatever else I think of over the next month, and can fit into the webinar
</code></pre>]]></description>
			</item>
			<item>
				<title>TechSession: A Crash Course in Version Control and Git with Warren Frame</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">https://PoshCode.org/video/powershellorg-techsessions-2015-07-14-techsession-a-crash-course-in-version-control-and-git-with-warren-frame/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=wmPfDbsPeZY"><img src="https://i4.ytimg.com/vi/wmPfDbsPeZY/hqdefault.jpg" alt="TechSession: A Crash Course in Version Control and Git with Warren Frame" title="TechSession: A Crash Course in Version Control and Git with Warren Frame" /></a></p>
<p>Join Warren Frame as we spin up on using Git and GitHub for version control. By the end of this session, you should be comfortable using version control on your own, contributing to Microsoft’s DSC Resources on GitHub, or even making a case to bring version control to your team at $Work.</p>
<p>PowerPoint and notes can be found at https://github.com/RamblingCookieMonster/Git-Presentation.</p>]]></description>
			</item>
			<item>
				<title>Beyond Syntax: Pester Testing</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">https://PoshCode.org/video/powershellorg-techsessions-2015-06-10-beyond-syntax-pester-testing/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=0fFrWIxVDl0"><img src="https://i1.ytimg.com/vi/0fFrWIxVDl0/hqdefault.jpg" alt="Beyond Syntax: Pester Testing" title="Beyond Syntax: Pester Testing" /></a></p>
<p>Join Dave Wyatt and go beyond the syntax of Pester with a deep dive on Unit Testing vs Integration / Acceptance Testing. Receive guidance on how to use Mocking and what to look for when creating testing scripts.</p>]]></description>
			</item>
			<item>
				<title>TechSession: Writing and Testing DSC Resources</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">https://PoshCode.org/video/powershellorg-techsessions-2014-08-08-techsession-writing-and-testing-dsc-resources/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=yRdlGgVpRbE"><img src="https://i2.ytimg.com/vi/yRdlGgVpRbE/hqdefault.jpg" alt="TechSession: Writing and Testing DSC Resources" title="TechSession: Writing and Testing DSC Resources" /></a></p>
<p>Join MVP Steven Murawski for a look at writing and testing custom DSC resources.</p>]]></description>
			</item>
			<item>
				<title>&quot;Best Practices for Script Design&quot; - PowerShell.org TechSession Recording</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">https://PoshCode.org/video/powershellorg-techsessions-2014-07-10-best-practices-for-script-design-powershell.org-techsession-recording/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=Lni4KjGMgu4">![&quot;Best Practices for Script Design&quot; - PowerShell.org TechSession Recording](https://i1.ytimg.com/vi/Lni4KjGMgu4/hqdefault.jpg &quot;&quot;Best Practices for Script Design&quot; - PowerShell.org TechSession Recording&quot;)</a></p>
<p>Don Jones discusses some best practices for designing scripts that promote easy testing, reusability, and more.</p>]]></description>
			</item>
			<item>
				<title>PowerShell.org TechSession Kickoff and State of the Org</title>
				<dc:creator>PowerShell.org</dc:creator>
				<guid ispermalink="true">https://PoshCode.org/video/powershellorg-techsessions-2014-05-22-powershell.org-techsession-kickoff-and-state-of-the-org/index.html</guid>
				<description><![CDATA[<p><a href="https://www.youtube.com/watch?v=EvpUxNkea7E"><img src="https://i2.ytimg.com/vi/EvpUxNkea7E/hqdefault.jpg" alt="PowerShell.org TechSession Kickoff and State of the Org" title="PowerShell.org TechSession Kickoff and State of the Org" /></a></p>
<p>We do a quick test to kick off our TechSession webinar schedule, and cover the current state of PowerShell.org, including information on the Association for Windows PowerShell Professionals and VERIFIED EFFECTIVE exams. Download the slide deck from http://powershell.org/wp/?p=15517.</p>]]></description>
			</item>
	</channel>
</rss>